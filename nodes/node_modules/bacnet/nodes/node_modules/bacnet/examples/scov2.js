// Wrapper for Subscribed-COV
const deviceAddress = process.argv[2]
const deviceID = process.argv[3]

// Cov Data format
const subscriberProcessIdentifier = process.argv[4] // uint_32
// add BACNET_OBJECT_ID monitoredObjectId
const cancellationRequest = process.argv[6] // bool
const issueConfirmedNotifications = process.argv[7] // bool (optional)
const lifetime = process.argv[8] // uint_32
// BACNET_PROPERTY_REFERENCE monitoredProperty
const covIncrementPresent = process.argv[9] // bool
const covIncrement = process.argv[10] // float
const errorClass = process.argv[11] // int_32 (BACNET_ERROR_CLASS)
const errorCode = process.argv[12] // int_32 (BACNET_ERROR_CODE)

var monitoredObjectId = {}

var monitoredProperty = {}

var covData = {subscriberProcessIdentifier: subscriberProcessIdentifier, monitoredObjectId: monitoredObjectId, cancellationRequest: cancellationRequest, issueConfirmedNotifications: issueConfirmedNotifications, lifetime: lifetime, monitoredProperty: monitoredProperty, covIncrementPresent: covIncrementPresent, covIncrement: covIncrement, errorClass: errorClass, errorCode: errorCode}

const bacnet = require('../bacnet.js')
const r = bacnet.init({
  datalink: {
    iface: process.env.BACNET_INTERFACE,
    ip_port: process.env.BACNET_PORT || 0xBAC0
  },
  device: false
})

console.log(covData)

r.subscribeCov(deviceAddress, deviceID, covData)

setTimeout(function () {}, 1000)
