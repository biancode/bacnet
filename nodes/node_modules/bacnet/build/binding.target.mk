# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := binding
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=binding' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DPRINT_ENABLED=1' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x \
	-std=c++11

INCS_Debug := \
	-I/home/akhil/.node-gyp/6.9.5/include/node \
	-I/home/akhil/.node-gyp/6.9.5/src \
	-I/home/akhil/.node-gyp/6.9.5/deps/uv/include \
	-I/home/akhil/.node-gyp/6.9.5/deps/v8/include \
	-I$(srcdir)/node_modules/nan \
	-I$(srcdir)/include \
	-I$(srcdir)/bacnet-stack/include \
	-I$(srcdir)/bacnet-stack/demo/handler \
	-I$(srcdir)/bacnet-stack/ports/linux

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=binding' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DPRINT_ENABLED=1' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x \
	-std=c++11

INCS_Release := \
	-I/home/akhil/.node-gyp/6.9.5/include/node \
	-I/home/akhil/.node-gyp/6.9.5/src \
	-I/home/akhil/.node-gyp/6.9.5/deps/uv/include \
	-I/home/akhil/.node-gyp/6.9.5/deps/v8/include \
	-I$(srcdir)/node_modules/nan \
	-I$(srcdir)/include \
	-I$(srcdir)/bacnet-stack/include \
	-I$(srcdir)/bacnet-stack/demo/handler \
	-I$(srcdir)/bacnet-stack/ports/linux

OBJS := \
	$(obj).target/$(TARGET)/src/module.o \
	$(obj).target/$(TARGET)/src/functions.o \
	$(obj).target/$(TARGET)/src/emitter.o \
	$(obj).target/$(TARGET)/src/jtocconversion.o \
	$(obj).target/$(TARGET)/src/ctojconversion.o \
	$(obj).target/$(TARGET)/src/BacnetValue.o \
	$(obj).target/$(TARGET)/src/s_rp.o \
	$(obj).target/$(TARGET)/src/s_wp.o \
	$(obj).target/$(TARGET)/src/s_ts.o \
	$(obj).target/$(TARGET)/src/s_dcc2.o \
	$(obj).target/$(TARGET)/src/s_rd2.o \
	$(obj).target/$(TARGET)/src/s_cov2.o \
	$(obj).target/$(TARGET)/src/s_whohas.o \
	$(obj).target/$(TARGET)/src/init.o \
	$(obj).target/$(TARGET)/src/device.o \
	$(obj).target/$(TARGET)/src/listen.o \
	$(obj).target/$(TARGET)/src/tsm.o \
	$(obj).target/$(TARGET)/src/h_alarm_ack.o \
	$(obj).target/$(TARGET)/src/h_arf_a.o \
	$(obj).target/$(TARGET)/src/h_arf.o \
	$(obj).target/$(TARGET)/src/h_awf.o \
	$(obj).target/$(TARGET)/src/h_ccov.o \
	$(obj).target/$(TARGET)/src/h_cov.o \
	$(obj).target/$(TARGET)/src/h_dcc.o \
	$(obj).target/$(TARGET)/src/h_errors.o \
	$(obj).target/$(TARGET)/src/h_gas_a.o \
	$(obj).target/$(TARGET)/src/h_get_alarm_sum.o \
	$(obj).target/$(TARGET)/src/h_getevent_a.o \
	$(obj).target/$(TARGET)/src/h_getevent.o \
	$(obj).target/$(TARGET)/src/h_iam.o \
	$(obj).target/$(TARGET)/src/h_ihave.o \
	$(obj).target/$(TARGET)/src/h_lso.o \
	$(obj).target/$(TARGET)/src/h_pt_a.o \
	$(obj).target/$(TARGET)/src/h_pt.o \
	$(obj).target/$(TARGET)/src/h_rd.o \
	$(obj).target/$(TARGET)/src/h_rp_a.o \
	$(obj).target/$(TARGET)/src/h_rp.o \
	$(obj).target/$(TARGET)/src/h_rpm_a.o \
	$(obj).target/$(TARGET)/src/h_rpm.o \
	$(obj).target/$(TARGET)/src/h_rr_a.o \
	$(obj).target/$(TARGET)/src/h_rr.o \
	$(obj).target/$(TARGET)/src/h_ts.o \
	$(obj).target/$(TARGET)/src/h_ucov.o \
	$(obj).target/$(TARGET)/src/h_upt.o \
	$(obj).target/$(TARGET)/src/h_whohas.o \
	$(obj).target/$(TARGET)/src/h_whois.o \
	$(obj).target/$(TARGET)/src/h_wp_a.o \
	$(obj).target/$(TARGET)/src/h_wp.o \
	$(obj).target/$(TARGET)/src/h_wpm.o \
	$(obj).target/$(TARGET)/bacnet-stack/demo/handler/h_npdu.o \
	$(obj).target/$(TARGET)/bacnet-stack/demo/handler/s_whois.o \
	$(obj).target/$(TARGET)/bacnet-stack/demo/handler/s_iam.o \
	$(obj).target/$(TARGET)/bacnet-stack/demo/handler/noserv.o \
	$(obj).target/$(TARGET)/bacnet-stack/demo/handler/txbuf.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/bacnet_stack.a $(obj).target/bacnet_stack.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/binding.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/binding.node: LIBS := $(LIBS)
$(obj).target/binding.node: TOOLSET := $(TOOLSET)
$(obj).target/binding.node: $(OBJS) $(obj).target/bacnet_stack.a FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/binding.node
# Add target alias
.PHONY: binding
binding: $(builddir)/binding.node

# Copy this to the executable output path.
$(builddir)/binding.node: TOOLSET := $(TOOLSET)
$(builddir)/binding.node: $(obj).target/binding.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/binding.node
# Short alias for building this executable.
.PHONY: binding.node
binding.node: $(obj).target/binding.node $(builddir)/binding.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/binding.node

